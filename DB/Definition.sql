
CREATE TABLE CLIENT (
	Client_ID		INT				NOT NULL,
	Client_Name		VARCHAR (30),
	Payment_Info	VARCHAR (30),
	Username		VARCHAR (30)	NOT NULL,
	Password		VARCHAR (256)	NOT NULL
);

ALTER TABLE CLIENT ADD PRIMARY KEY (Client_ID);

CREATE TABLE LOCATION (
	Location_ID		INT			NOT NULL,
	Region			INT			NOT NULL,
	River			BIT,
	Lake			BIT,
	Inshore			BIT,
	Offshore		BIT,
	Availability	BIT,
);

ALTER TABLE LOCATION ADD PRIMARY KEY (Location_ID);

CREATE TABLE REGION (
	Region_ID		INT				NOT NULL,
	Region_Name		VARCHAR (30)	NOT NULL,
	Location		INT,
	Fish			VARCHAR (30),
	Season			INT
);

ALTER TABLE REGION ADD PRIMARY KEY (Region_ID);

CREATE TABLE SEASON (
	Season_ID		INT					NOT NULL,
	Season_name		VARCHAR (30)		NOT NULL,
	Guide_Available	VARCHAR (30)
);

ALTER TABLE SEASON ADD PRIMARY KEY (Season_ID);

CREATE TABLE SCHEDULE (
	Date			DATE				NOT NULL,
	Guide_Name		VARCHAR (30)		NOT NULL,
	Afternoon		BIT,
	Overnight		BIT,
	Evening			BIT,
	Morning			BIT,
	Guide_Available	VARCHAR (30)
);

ALTER TABLE SCHEDULE ADD PRIMARY KEY (Date);

CREATE TABLE FISH (
	Fish_Name		VARCHAR (20)	NOT NULL,
	Location		INT,
	Region			INT				NOT NULL CHECK (Region > 0 AND Region < 20),
	Season			INT
);

ALTER TABLE FISH ADD PRIMARY KEY (Fish_Name);

CREATE TABLE GUIDE (
	Guide_Name		VARCHAR (30)	NOT NULL,
	Region			INT,
	Location		INT,
	Fishing_Style	VARCHAR (30),
	Overnight		BIT,
	Season			INT				NOT NULL CHECK (Season > 0 AND Season < 4)
);

ALTER TABLE GUIDE ADD PRIMARY KEY (Guide_Name);

CREATE TABLE BOOKED_TRIP (
	Trip_Id			INT				NOT NULL,
	Client_Name		VARCHAR (30)	NOT NULL,
	Party_Size		INT				NOT NULL CHECK (Party_Size > 0 AND Party_Size < 10),
	Target_Fish		VARCHAR (20),
	Region			INT				NOT NULL CHECK (Region > 0 AND Region < 20),
	Location		INT,
	Fishing_Style	VARCHAR (30),
	Guide_Name		VARCHAR (30),
	Trip_End		DATE			NOT NULL,
);

ALTER TABLE BOOKED_TRIP ADD PRIMARY KEY (Trip_Id);

ALTER TABLE LOCATION ADD FOREIGN KEY (Region) REFERENCES Region (Region_ID) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE SCHEDULE ADD FOREIGN KEY (Guide_Name) REFERENCES GUIDE (Guide_Name) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE FISH ADD FOREIGN KEY (Location) REFERENCES LOCATION (Location_ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE FISH ADD FOREIGN KEY (Region) REFERENCES REGION (Region_ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE FISH ADD FOREIGN KEY (Season) REFERENCES SEASON (Season_ID) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE GUIDE ADD FOREIGN KEY (Location) REFERENCES LOCATION (Location_ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE GUIDE ADD FOREIGN KEY (Region) REFERENCES REGION (Region_ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE GUIDE ADD FOREIGN KEY (Season) REFERENCES SEASON (Season_ID) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE BOOKED_TRIP ADD FOREIGN KEY (Region) REFERENCES REGION (Region_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BOOKED_TRIP ADD FOREIGN KEY (Location) REFERENCES LOCATION (Location_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BOOKED_TRIP ADD FOREIGN KEY (Guide_Name) REFERENCES GUIDE (Guide_Name) ON DELETE CASCADE ON UPDATE CASCADE;

INSERT INTO GUIDE VALUES ('John J Cod', 3, 4, 'Fly Fishing', 1, 1)
INSERT INTO GUIDE VALUES ('Jill M Red', 2, 3, 'Spinning Reel', 0, 2)
INSERT INTO GUIDE VALUES ('Gary Y James', 4, 3, 'Offshore', 1, 3)

INSERT INTO FISH VALUES ('Redfish', 3, 2, 2) 
INSERT INTO FISH VALUES ('Bass', 3, 2, 2) 
INSERT INTO FISH VALUES ('Trout', 4,3, 2) 
INSERT INTO FISH VALUES ('Snapper', 4, 3, 2)

INSERT INTO LOCATION VALUES (3, 2, 1, 0, 0, 0, 1)
INSERT INTO LOCATION VALUES (3, 4, 0, 0, 0, 1, 0)
INSERT INTO LOCATION VALUES (4, 3, 0, 1, 0, 0, 0) 

INSERT INTO REGION VALUES (3, 'SouthEast Georgia', 2, 'Bass', 1)
INSERT INTO REGION VALUES (3, 'North Georgia', 4, 'Trout', 3)
INSERT INTO REGION VALUES (4, 'Coastal Georgia', 3, 'Bass', 2)

INSERT INTO SEASON VALUES (1, 'Spring', NULL) 
INSERT INTO SEASON VALUES (2, 'Summer', NULL) 
INSERT INTO SEASON VALUES (3, 'Fall', NULL) 
INSERT INTO SEASON VALUES (4, 'Winter', NULL) 

INSERT INTO CLIENT VALUES (0123, 'James Charlie', 4564239499330319 ,' jcharlie212', '********')
INSERT INTO CLIENT VALUES (0112, 'Laide Dineo', 4532333249302312 ,' dlaids229', '********')
INSERT INTO CLIENT VALUES (0155, 'Koali Green', 4522548299391231 , 'koaGreen1212', '********')
INSERT INTO CLIENT VALUES (0185, 'Holton Jeon', 4513425324623312 ,' jchhJeon4422', '********')

INSERT INTO SCHEDULE VALUES (2021-03-04, 0, 1, 0, 0, 'John J Cod ')
INSERT INTO SCHEDULE VALUES (2021-07-06, 1, 0, 1, 1, 'Jill M Red ')
INSERT INTO SCHEDULE VALUES (2021-09-10, 0, 1, 0, 0, 'Gary Y James ')

INSERT INTO BOOKED_TRIP VALUES (4213, 'James Charlie ', 2, 'Redfish', 3, 2, 'Spinning Reel', 'Jill M Red', 2021-07-06)
INSERT INTO BOOKED_TRIP VALUES (4200, 'Laide Dineo', 3, 'Redfish', 4, 3, 'Fly Fishing', 'John J Cod', 2021-03-05)

GO

CREATE TRIGGER ON_CLIENT_REGISTER ON CLIENT FOR INSERT 
AS 
IF EXISTS (SELECT *
		   FROM CLIENT AS C
		   WHERE Username = C.Username)
BEGIN
	RAISERROR ('User already exists!', 1, 1);
	ROLLBACK TRANSACTION;
END;
